name: Auto Deploy

on:
    pull_request:
        types:
            - closed
        branches:
            - main
    repository_dispatch:
        types: [ automated-deploy ]

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [ 14.x ]

        permissions:
            contents: write
            packages: write

        steps:
#            -   uses: actions/checkout@v3

#            -   name: Use Node.js ${{ matrix.node-version }}
#                uses: actions/setup-node@v3
#                with:
#                    node-version: ${{ matrix.node-version }}
#                    cache: 'yarn'
#
#            -   name: Check npmrc existence
#                id: check_files
#                uses: andstor/file-existence-action@v2
#                with:
#                    files: "test1/test2.txt"
#
#            -   name: File exists
#                if: steps.check_files.outputs.files_exists == 'false'
#                run: cd test1 && echo "test" >> test.txt
#            -   name: Yarn timeout config
#                run: yarn config set network-timeout 300000
#
#            -   name: Install dependencies
#                run: yarn --prefer-offline
#
#            -   name: Build FrontEnd application
#                run: yarn run build  ${{ github.event.pull_request.title }}
            -   name: Set current date as env variable
                id: datetime
                run: echo "now=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

            -   name: Set current date as env variable
                id: datetime-short
                run: echo "now=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_OUTPUT

            -   name: Release
                id: create_release
                uses: release-drafter/release-drafter@v5
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag: tag-${{ github.event.client_payload.COMMIT_SHA || github.sha }}
                    name: ${{ steps.datetime-short.outputs.now }} - ${{ github.event.pull_request.title || github.event.client_payload.COMMIT_MSG }}
                    prerelease: true
                    publish: true
                    header: |
                        Release date - ${{ steps.datetime.outputs.now }}
                        Git SHA - ${{ github.event.client_payload.COMMIT_SHA || github.sha }}
                    footer: |
                        [Deploy link](https://dappradar.dev/release-wf-trigger/giedriusvickus/${{ github.event.client_payload.COMMIT_SHA || github.sha }})
